image: python:3.9-alpine

test:
  stage: test
  script:
  - apk add git # for git based dependencies
  - apk add build-base # for using `make`
  - apk add linux-headers # for `psutil`, which is a dependency of `fenix_library-analyzing`. pip install does not automatically handle all the dependencies of psutil
  - apk add graphviz fontconfig # for diagrams
  - pip install pipenv # install pipenv for reading the pipfile and installing the dev dependencies
  - pipenv install --system --dev # install the dev dependencies so that we have (1) Sphinx and a theme for it, and also (2) for keeping dependencies importable and hence documentable
  - cd documentation && make html; cd .. # run Sphinx to generate documentation as html. Information on build is in the makefile and in `conf.py`
  - cp -r documentation/build/html/. public/ # copy the html pages to the public directory
  only:
  - branches
  except:
  - master

pages:
  stage: deploy
  script:
  - apk add git # for git based dependencies
  - apk add build-base # for using `make`
  - apk add linux-headers # for `psutil`, which is a dependency of `fenix_library-analyzing`. pip install does not automatically handle all the dependencies of psutil
  - apk add graphviz fontconfig # for diagrams
  - pip install pipenv # install pipenv for reading the pipfile and installing the dev dependencies
  - pipenv install --system --dev # install the dev dependencies so that we have (1) Sphinx and a theme for it, and also (2) for keeping dependencies importable and hence documentable
  - cd documentation && make html; cd .. # run Sphinx to generate documentation as html. Information on build is in the makefile and in `conf.py`
  - cp -r documentation/build/html/. public/ # copy the html pages to the public directory
  artifacts:
    paths:
    - public
  only:
  - master
